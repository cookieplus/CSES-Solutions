/**
Counting Towers
===============
Đề bài:
	Xây tháp n x 2 bằng các viên gạch.
	Đếm số cách xây.
	In: 
		t: number of tests
		t dòng, mỗi dòng là ni.
	Out:
		t dòng
		si: số cách	
	Giới hạn:
		1 <= t <= 100
		t <= n <= 10^6	
Phân tích:
	Xét 2 ô trên cùng của tháp, sẽ có 6 dạng sau

1	+--+--+
	|  |  |
	+--+--+


2	+--+--+
	|     |
	+--+--+

3	+--+--+
	|  |  |
	+  +--+

4	+--+--+
	|  |  |
	+--+  +

5	+--+--+
	|  |  |
	+  +  +

6	+--+--+
	|     |
	+     +


Với mỗi dạng, thêm 1 tầng nữa ở trên thì có thể chuyển đổi như sau:

1 >    1          2          3          4          5 
	+--+--+    +--+--+    +--+--+    +--+--+    +--+--+   						  
	|  |  |    |     |    |  |  |    |  |  |    |  |  |
	+--+--+    +--+--+    +  +--+    +--+  +    +  +  +   						  
	|  |  |    |  |  |    |  |  |    |  |  |    |  |  |
	+--+--+    +--+--+    +--+--+    +--+--+    +--+--+   						  

2 >    1          2          6
	+--+--+    +--+--+    +--+--+
	|  |  |    |     |    |     |
	+--+--+    +--+--+    +     +
	|     |    |     |    |     |
	+--+--+    +--+--+    +--+--+

3 >    1          3          5          4 
	+--+--+    +--+--+    +--+--+    +--+--+   						  
	|  |  |    |  |  |    |  |  |    |  |  |
	+--+--+    +  +--+    +  +  +    +--+  +   						  
	|  |  |    |  |  |    |  |  |    |  |  |
	+  +--+    +  +--+    +  +--+    +  +--+   						  

4 >    1          4          5          3 
	+--+--+    +--+--+    +--+--+    +--+--+   						  
	|  |  |    |  |  |    |  |  |    |  |  |
	+--+--+    +--+  +    +  +  +    +  +--+   						  
	|  |  |    |  |  |    |  |  |    |  |  |
	+--+  +    +--+  +    +--+  +    +--+  +   						  

5 >    1          3          4          5 
	+--+--+    +--+--+    +--+--+    +--+--+   						  
	|  |  |    |  |  |    |  |  |    |  |  |
	+--+--+    +  +--+    +--+  +    +  +  +   						  
	|  |  |    |  |  |    |  |  |    |  |  |
	+  +  +    +  +  +    +--+  +    +  +  +   						  

6 >    1          2          6
	+--+--+    +--+--+    +--+--+
	|  |  |    |     |    |     |
	+--+--+    +--+--+    +     +
	|     |    |     |    |     |
	+     +    +     +    +     +


Ban đầu ở tầng 1, chỉ có dạng 1, 2.

	Gọi dp[n][k] là số phương án ở tầng n và có lớp trên cùng dạng k (k từ 1 đến 6)
	Như vậy ta có thể tính dp[n][k] với k từ 1 đến 6 như sau
	dp[n][1] = dp[n-1][1] + dp[n-1][2] + dp[n-1][3] + dp[n-1][4] + dp[n-1][5] + dp[n-1][6]
	dp[n][2] = dp[n-1][1] + dp[n-1][2] + dp[n-1][3] + dp[n-1][4] + dp[n-1][5] + dp[n-1][6]
	dp[n][3] = dp[n-1][1] + dp[n-1][3] + dp[n-1][4] + dp[n-1][5]
	dp[n][4] = dp[n-1][1] + dp[n-1][3] + dp[n-1][4] + dp[n-1][5]
	dp[n][5] = dp[n-1][1] + dp[n-1][3] + dp[n-1][4] + dp[n-1][5]
	dp[n][6] = dp[n-1][1] + dp[n-1][2] + dp[n-1][6]
	Tổng số cách ở tầng k = dp[n][1] + dp[n][2] + dp[n][3] + dp[n][4] + dp[n][5] + dp[n][6]

*/    
#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
const int maxN = 1e6;
const ll MOD = 1e9+7;

int T, N;
ll dp[maxN+1];

int main(){
    dp[1] = 2;
    dp[2] = 8;
    for(int i = 3; i <= maxN; i++)
        dp[i] = ((6*dp[i-1] - 7*dp[i-2]) % MOD + MOD) % MOD;

    scanf("%d", &T);
    for(int t = 0; t < T; t++){
        scanf("%d", &N);
        printf("%lld\n", dp[N]);
    }
}
